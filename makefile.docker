ifeq (${IS_CYGWIN}, 1)
WORKSPACE := $(shell cygpath -u ${WORKSPACE})
$(shell dos2unix *.sh)
endif

build_docker_image:
	docker build -t ci_hub .

build_hub:
	docker run -P -v "${WORKSPACE}:/root/repo" ci_hub /bin/bash -c "cd repo && cmake /root/repo && make"

generate_cobertura:
	docker run -P -v "${WORKSPACE}:/root/repo" -e WORKSPACE="/root/repo" ci_hub /bin/bash -c "cd repo && ./generate_cobertura.sh"

generate_cloc:
	docker run -P -v "${WORKSPACE}:/root/repo" -e WORKSPACE="/root/repo" ci_hub /bin/bash -c "cd repo && ./generate_cloc.sh"

run_ut:
	docker run -P -v "${WORKSPACE}:/root/repo" ci_hub /bin/bash -c "cd repo && ./ut --gtest_output=xml"

run_vut:
	docker run -P -v "${WORKSPACE}:/root/repo" ci_hub /bin/bash -c "cd repo && valgrind --leak-check=full --show-reachable=yes --leak-resolution=high --num-callers=50 --trace-children=yes --xml=yes --xml-file=valgrind_ut_result.xml ./ut --gtest_output=xml"

run_ft:
	docker run -P -v "${WORKSPACE}:/root/repo" ci_hub /bin/bash -c "cd repo && ./run_functional_tests.sh"

run_interactive:
	docker run -P -v "${WORKSPACE}:/root/repo" -t -i ci_hub /bin/bash

